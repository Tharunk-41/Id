{"version":3,"file":"static/js/510.0898dbab.chunk.js","mappings":"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","sources":["components/Details/pubs.jsx","../node_modules/@mui/icons-material/KeyboardArrowDown.js","../node_modules/@mui/icons-material/KeyboardArrowUp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Collapse, TablePagination, IconButton, TextField\n} from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport axios from 'axios';\n\n// Helper function to format publication data\nconst createPubData = (id, date, journalName, article, meshTerms, abstract, role, publicationType, pid, link) => ({\n  id,\n  date,\n  journalName,\n  article,\n  meshTerms,\n  abstract,\n  role,\n  publicationType,\n  pid,\n  link\n});\n\nconst PubRow = ({ row }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{ '&:hover': { backgroundColor: '#F0F0F0' } }} // Change background color on hover\n      >\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell>\n          <a href={`${row.link}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            {row.pid}\n          </a>\n        </TableCell>\n        <TableCell>{row.date}</TableCell>\n        <TableCell>{row.journalName}</TableCell>\n        <TableCell>{row.article}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={5}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Publication Details\n              </Typography>\n              <Typography variant=\"body2\"><strong>Abstract:</strong> {row.abstract}</Typography>\n              <Typography variant=\"body2\"><strong>Role:</strong> {row.role}</Typography>\n              <Typography variant=\"body2\"><strong>Publication Type:</strong> {row.publicationType}</Typography>\n              <Typography variant=\"body2\"><strong>Mesh Terms:</strong> {row.meshTerms}</Typography>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nconst Pubs = ({ kolId }) => {\n  const [publications, setPublications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [page, setPage] = useState(0);\n  const [searchQuery, setSearchQuery] = useState(''); // State for search query\n\n  useEffect(() => {\n    const fetchPublications = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/publications`, {\n          params: { kolId }\n        });\n        const publications = response.data;\n        setPublications(publications);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching publications:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchPublications();\n  }, [kolId]);\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const filteredPubs = publications.filter(publication =>\n    publication['Journal Name'].toLowerCase().includes(searchQuery.toLowerCase()) ||\n    publication['Article'].toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const rows = filteredPubs.map((publication, index) => createPubData(\n    `${publication['Publication ID']}-${index}`, // Ensure the key is unique by adding the index\n    publication['Formatted Date (DD/MM/YYYY)'],\n    publication['Journal Name'],\n    publication['Article'],\n    publication['Mesh Terms - Pubmed'],\n    publication['Abstract'],\n    publication['Role'],\n    publication['Publication Type'],\n    publication['PubmedID'],\n    publication['Reference Link']\n\n  ));\n\n  return (\n    <Box sx={{ flexGrow: 1, width: '100%', p: 2, overflow: 'hidden', height: '100vh' }}>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\" gutterBottom color=\"#3D52A0\">\n          List of Publications\n        </Typography>\n        <TextField\n          label=\"Search Publications\"\n          variant=\"outlined\"\n          size=\"small\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          sx={{ marginRight: '16px', width: '300px' }}\n        />\n        <TablePagination\n          component=\"div\"\n          count={publications.length}\n          page={page}\n          onPageChange={handlePageChange}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={handleRowsPerPageChange}\n        />\n      </div>\n      {loading ? (\n        <Typography variant=\"body1\">Loading...</Typography>\n      ) : filteredPubs.length === 0 ? (\n        <Typography variant=\"body1\">No publications found.</Typography>\n      ) : (\n        <TableContainer component={Paper} sx={{ maxHeight: '70vh', overflow: 'auto' }}>\n          <Table stickyHeader aria-label=\"collapsible table\">\n            <TableHead sx={{ backgroundColor: '#54C1DF' }}>\n              <TableRow>\n                <TableCell />\n                <TableCell><strong>PubMed ID</strong></TableCell>\n                <TableCell><strong>Date</strong></TableCell>\n                <TableCell><strong>Journal Name</strong></TableCell>\n                <TableCell><strong>Article</strong></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <PubRow key={row.id} row={row} />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Box>\n  );\n};\n\nexport default Pubs;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6z\"\n}), 'KeyboardArrowDown');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');"],"names":["PubRow","_ref","row","open","setOpen","useState","_jsxs","React","children","TableRow","sx","backgroundColor","_jsx","TableCell","IconButton","size","onClick","KeyboardArrowUpIcon","KeyboardArrowDownIcon","href","concat","link","target","rel","pid","date","journalName","article","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","variant","gutterBottom","component","abstract","role","publicationType","meshTerms","_ref2","kolId","publications","setPublications","loading","setLoading","rowsPerPage","setRowsPerPage","page","setPage","searchQuery","setSearchQuery","useEffect","async","axios","get","process","params","data","error","console","fetchPublications","filteredPubs","filter","publication","toLowerCase","includes","rows","map","index","createPubData","id","flexGrow","width","p","overflow","height","display","justifyContent","color","TextField","label","value","onChange","e","marginRight","TablePagination","count","length","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","TableContainer","Paper","maxHeight","Table","stickyHeader","TableHead","TableBody","slice","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}