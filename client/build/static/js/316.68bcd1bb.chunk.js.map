{"version":3,"file":"static/js/316.68bcd1bb.chunk.js","mappings":"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","sources":["components/Details/summary.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport './summary.css';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst PieChartsComponent = ({ kolDetails }) => {\n  const [keywords, setKeywords] = useState([]);\n  const [associationData, setAssociationData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const colors = [\n    '#4ce1f9',\n    '#7a7a7a',\n    '#567fb3',\n    '#eb716c',\n    '#fbcc3e',\n    '#84cfae',\n    '#e9a246',\n    '#c2c6c9',\n    '#278a5e',\n    '#0185cd',\n  ];\n\n  const borderColors = [\n    '#ffffff',\n  ];\n\n  useEffect(() => {\n    const fetchKeywords = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/keywords`);\n        setKeywords(response.data.keywords);\n      } catch (err) {\n        console.error('Error fetching keywords:', err);\n        setError('Error fetching keywords');\n      }\n    };\n\n    const fetchAssociationData = async () => {\n      if (kolDetails && kolDetails['KOL ID']) {\n        try {\n          const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/associations/${kolDetails['KOL ID']}`);\n          setAssociationData(response.data);\n        } catch (err) {\n          if (err.response && err.response.status === 404) {\n            console.warn('Association data not found:', err);\n            setAssociationData(null); // Reset associationData to null on 404 error\n          } else {\n            console.error('Error fetching association data:', err);\n            setError('Error fetching association data');\n          }\n        }\n      }\n    };\n\n    const fetchData = async () => {\n      setLoading(true);\n      await Promise.all([fetchKeywords(), fetchAssociationData()]);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [kolDetails]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  if (!kolDetails) {\n    return <div>No KOL details available</div>;\n  }\n\n  const processChartData = (dataKeyPrefix = '') => {\n    const labels = keywords;\n    const dataValues = labels.map(label => {\n      const key = `${dataKeyPrefix}${label}`;\n      return kolDetails[key] || 0;\n    });\n\n    return {\n      labels,\n      datasets: [\n        {\n          label: `Count`,\n          data: dataValues,\n          backgroundColor: colors,\n          borderColor: borderColors,\n          borderWidth: 1,\n        },\n      ],\n    };\n  };\n\n  const isDataEmpty = (data) => {\n    return data.datasets[0].data.every(value => value === \"0\" || value === 0);\n  };\n  \n  const chartOptions = {\n    plugins: {\n      legend: {\n        display: true,\n        position: 'right',\n        labels: {\n          generateLabels: (chart) => {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              return data.labels\n                .map((label, i) => {\n                  const value = data.datasets[0].data[i];\n                  if (value > 0) {\n                    return {\n                      text: `${label}`,\n                      fillStyle: data.datasets[0].backgroundColor[i],\n                      strokeStyle: data.datasets[0].borderColor[i],\n                      lineWidth: data.datasets[0].borderWidth,\n                      hidden: false,\n                      index: i,\n                    };\n                  }\n                  return null;\n                })\n                .filter(item => item !== null); // Filter out null items\n            }\n            return [];\n          },\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            const label = tooltipItem.label || '';\n            const value = tooltipItem.raw || 0;\n            return `${label}: ${value}`;\n          },\n        },\n      },\n    },\n    maintainAspectRatio: false,\n  };\n  \n  \n  const publicationsData = processChartData('PUBS_');\n  const clinicalTrialsData = processChartData('CT_');\n  const conferencesData = processChartData('');\n\n  const combinedPublicationsData = {\n    labels: ['First Author Pubs Count', 'Co-Author Pubs Count'],\n    datasets: [\n      {\n        label: 'Publications Count',\n        data: [\n          kolDetails['First Author Pubs Count'] || 0,\n          (kolDetails['Key topic Pubs Count'] || 0) - (kolDetails['First Author Pubs Count'] || 0),\n        ],\n        backgroundColor: colors,\n        borderColor: borderColors,\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const principalInvestigatorData = {\n    labels: ['Principal Investigator', 'Investigator'],\n    datasets: [\n      {\n        label: 'Trials Count',\n        data: [\n          kolDetails['Principal Investigator'] || 0,\n          (kolDetails['Key topic Trials Count'] || 0) - (kolDetails['Principal Investigator'] || 0),\n        ],\n        backgroundColor: colors,\n        borderColor: borderColors,\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const associationChartData = {\n    labels: ['Board Member', 'Chair Person', 'Committee Member', 'President', 'Secretary'],\n    datasets: [\n      {\n        label: 'Count',\n        data: [\n          associationData?.['Board Member'] || 0,\n          associationData?.['Chair Person'] || 0,\n          associationData?.['Committee Member'] || 0,\n          associationData?.['President'] || 0,\n          associationData?.['Secretary'] || 0,\n        ],\n        backgroundColor: colors,\n        borderColor: borderColors,\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"pie-charts-row\">\n      {[\n        { title: 'Publications', data: publicationsData },\n        { title: 'Clinical Trials', data: clinicalTrialsData },\n        { title: 'Conferences', data: conferencesData },\n        { title: 'Investigation Roles', data: principalInvestigatorData },\n        { title: 'Publication Roles', data: combinedPublicationsData },\n        { title: 'Association Roles ', data: associationChartData }, // New Pie Chart for Associations Graph\n      ].map(({ title, data }, index) => (\n        !isDataEmpty(data) && (\n          <Card key={index} className=\"pie-chart-container\" sx={{ margin: '5px', width: '350px', height: \"300px\", mx: 0, border: 'solid 2px #3D52A0' }}>\n            <CardContent>\n              <Typography variant=\"h6\" component=\"div\" gutterBottom sx={{ display: \"flex\", justifyContent: \"center\", fontWeight: 'bold' }}>\n                {title}\n              </Typography>\n              <div style={{ height: '200px', position: 'relative' }}>\n                <Pie data={data} options={chartOptions} />\n              </div>\n            </CardContent>\n          </Card>\n        )\n      ))}\n    </div>\n  );\n};\n\nexport default PieChartsComponent;\n"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","_ref","kolDetails","keywords","setKeywords","useState","associationData","setAssociationData","loading","setLoading","error","setError","colors","borderColors","useEffect","fetchKeywords","async","response","axios","get","concat","process","data","err","console","fetchAssociationData","status","warn","Promise","all","fetchData","_jsx","children","processChartData","dataKeyPrefix","arguments","length","undefined","labels","dataValues","map","label","key","datasets","backgroundColor","borderColor","borderWidth","chartOptions","plugins","legend","display","position","generateLabels","chart","i","text","fillStyle","strokeStyle","lineWidth","hidden","index","filter","item","tooltip","callbacks","tooltipItem","value","raw","maintainAspectRatio","publicationsData","clinicalTrialsData","conferencesData","combinedPublicationsData","principalInvestigatorData","associationChartData","className","title","_ref2","every","isDataEmpty","Card","sx","margin","width","height","mx","border","_jsxs","CardContent","Typography","variant","component","gutterBottom","justifyContent","fontWeight","style","Pie","options"],"sourceRoot":""}