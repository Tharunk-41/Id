{"version":3,"file":"static/js/371.68b33361.chunk.js","mappings":"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","sources":["components/Details/overview.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Grid, LinearProgress, Tooltip, Card, CardContent, Divider } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst Overview = ({ kolDetails, setValue }) => {\r\n  const [bioText, setBioText] = useState('');\r\n  const [progressValues, setProgressValues] = useState({\r\n    congress: 0,\r\n    trials: 0,\r\n    investigator: 0,\r\n    firstAuthor: 0,\r\n    keyTopic: 0\r\n  });\r\n  const [maxValues, setMaxValues] = useState({});\r\n  const [medianValues, setMedianValues] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchWeightages = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/weightages/all`);\r\n        const weightages = response.data.reduce((acc, item) => {\r\n          acc[item.column_name.toLowerCase().replace(/ /g, '')] = parseFloat(item.max);\r\n          return acc;\r\n        }, {});\r\n        setMaxValues(weightages);\r\n\r\n        // Assuming median values are also provided in the same API response\r\n        const medians = response.data.reduce((acc, item) => {\r\n          acc[item.column_name.toLowerCase().replace(/ /g, '')] = parseFloat(item.median);\r\n          return acc;\r\n        }, {});\r\n        setMedianValues(medians);\r\n      } catch (error) {\r\n        console.error('Failed to fetch weightages:', error);\r\n      }\r\n    };\r\n\r\n    fetchWeightages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const animateBioText = async () => {\r\n      const text = kolDetails['Biosummary'] || '';\r\n      const delay = 10;\r\n      let tempText = '';\r\n      for (let i = 0; i <= text.length; i++) {\r\n        tempText = text.slice(0, i);\r\n        setBioText(tempText);\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n      }\r\n    };\r\n  \r\n    animateBioText();\r\n  \r\n    setProgressValues({\r\n      congress: kolDetails['Congress Count'],\r\n      trials: kolDetails['Key topic Trials Count'],\r\n      investigator: kolDetails['Principal Investigator'],\r\n      firstAuthor: kolDetails['First Author Pubs Count'],\r\n      keyTopic: kolDetails['Key topic Pubs Count']\r\n    });\r\n  }, [kolDetails, maxValues]);\r\n\r\n  const ProgressWithLabel = ({ value, label, targetValue, maxValue, medianValue, color }) => {\r\n    const title = `${targetValue} / ${maxValue} , Median:${medianValue}`;\r\n    \r\n    return (\r\n      <Tooltip title={<span>{title}</span>} arrow>\r\n        <div>\r\n          <Typography variant=\"body1\">{label}</Typography>\r\n          <Box sx={{ mb: 2, width: '100%', position: 'relative' }}>\r\n            <LinearProgress \r\n              variant=\"determinate\" \r\n              value={(value / maxValue) * 100} \r\n              sx={{\r\n                '& .MuiLinearProgress-bar': {\r\n                backgroundColor: color}, // Change the bar background color\r\n                backgroundColor:\"#ccc\", height: 30, borderRadius: 5, marginTop: \"20px\"\r\n              }} \r\n            />\r\n            <Box\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: `${(medianValue / maxValue) * 100}%`,\r\n                width: '2px',\r\n                height: '100%',\r\n                backgroundColor: 'white'\r\n              }}\r\n            />\r\n          </Box>\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Box sx={{ flexGrow: 1, width: '100%', p: 2 }}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" gutterBottom color=\"#3D52A0\">Bio Summary</Typography>\r\n          <Typography variant=\"body1\">{bioText}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Divider sx={{ width: '100%' }} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" gutterBottom color=\"#3D52A0\">Statistics</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sx={{ mb: 2 }}>\r\n          <Grid container spacing={2} justifyContent=\"space-between\">\r\n            <Grid item xs={12} sm={4}>\r\n              <Box\r\n                component={Card}\r\n                variant=\"outlined\"\r\n                onClick={() => setValue('events')}\r\n                sx={{ cursor: 'pointer', '&:hover': { backgroundColor: '#EDE8F5' } }}\r\n              >\r\n                <CardContent>\r\n                  <Typography variant=\"body1\"><strong>Total Events Attended:</strong> {kolDetails.totalEvents}</Typography>\r\n                </CardContent>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Box\r\n                component={Card}\r\n                variant=\"outlined\"\r\n                onClick={() => setValue('clinical-trials')}\r\n                sx={{ cursor: 'pointer', '&:hover': { backgroundColor: '#EDE8F5' } }}\r\n              >\r\n                <CardContent>\r\n                  <Typography variant=\"body1\"><strong>Trials Participated:</strong> {kolDetails.totalTrials}</Typography>\r\n                </CardContent>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Box\r\n                component={Card}\r\n                variant=\"outlined\"\r\n                onClick={() => setValue('publications')}\r\n                sx={{ cursor: 'pointer', '&:hover': { backgroundColor: '#EDE8F5' } }}\r\n              >\r\n                <CardContent>\r\n                  <Typography variant=\"body1\"><strong>Publication Count:</strong> {kolDetails.totalPublications}</Typography>\r\n                </CardContent>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <ProgressWithLabel value={progressValues.congress} label=\"Congress\" targetValue={kolDetails['Congress Count']} maxValue={maxValues.congresscount} medianValue={medianValues.congresscount} color={\"#3D52A0\"} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <ProgressWithLabel value={progressValues.trials} label=\"Trials\" targetValue={kolDetails['Key topic Trials Count']} maxValue={maxValues.keytopictrialscount} medianValue={medianValues.keytopictrialscount} color={\"#7091E6\"}/>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <ProgressWithLabel value={progressValues.investigator} label=\"Principal Investigator\" targetValue={kolDetails['Principal Investigator']} maxValue={maxValues.principalinvestigator} medianValue={medianValues.principalinvestigator} color={\"#7091E6\"} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <ProgressWithLabel value={progressValues.firstAuthor} label=\"First Author Pubs\" targetValue={kolDetails['First Author Pubs Count']} maxValue={maxValues.firstauthorpubscount} medianValue={medianValues.firstauthorpubscount} color={\"#3D52A0\"}/>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <ProgressWithLabel value={progressValues.keyTopic} label=\"Key Topic Pubs\" targetValue={kolDetails['Key topic Pubs Count']} maxValue={maxValues.keytopicpubscount} medianValue={medianValues.keytopicpubscount} color={\"#3D52A0\"} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n"],"names":["_ref","kolDetails","setValue","bioText","setBioText","useState","progressValues","setProgressValues","congress","trials","investigator","firstAuthor","keyTopic","maxValues","setMaxValues","medianValues","setMedianValues","useEffect","async","response","axios","get","concat","process","weightages","data","reduce","acc","item","column_name","toLowerCase","replace","parseFloat","max","medians","median","error","console","fetchWeightages","text","tempText","i","length","slice","Promise","resolve","setTimeout","animateBioText","ProgressWithLabel","_ref2","value","label","targetValue","maxValue","medianValue","color","title","_jsx","Tooltip","children","arrow","_jsxs","Typography","variant","Box","sx","mb","width","position","LinearProgress","backgroundColor","height","borderRadius","marginTop","top","left","flexGrow","p","Grid","container","spacing","xs","gutterBottom","Divider","justifyContent","sm","component","Card","onClick","cursor","CardContent","totalEvents","totalTrials","totalPublications","congresscount","keytopictrialscount","principalinvestigator","firstauthorpubscount","keytopicpubscount"],"sourceRoot":""}